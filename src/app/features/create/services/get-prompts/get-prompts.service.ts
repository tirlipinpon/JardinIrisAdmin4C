import { Injectable } from '@angular/core';
import {afficherCategories} from "../../../../utils/afficherCategories";
import {formatCurrentDateUs} from "../../../../utils/getFormattedDate";
import {VideoInfo} from "../../../all/services/google-search/google-search.service";
import {afficherRandomSeoKeyWords} from "../../../../utils/afficherRandomSeoKeyWords";

@Injectable({
  providedIn: 'root'
})
export class GetPromptsService {

  selectArticle(newsApiData: any): any {
    return {
      systemRole: {
        "role": "system",
        "content": `
        Analysez une liste d'articles pour d√©terminer s'il y a un article pertinent pour un blog.
Consid√©rez si l'article est adapt√© √† des amateurs ou professionnels et s'il est li√© aux cat√©gories ${afficherCategories(', ')}.
# Crit√®res d'√©valuation
- V√©rifiez si l'article est pertinent pour des lecteurs amateurs ou professionnels selon ces cat√©gories : ${afficherCategories(', ')}.
- Assurez-vous que le contenu est li√© aux cat√©gories sp√©cifi√©es, directement ou indirectement.
# Instructions de Sortie
Si vous trouvez un article pertinent, retournez un objet JSON valide avec les champs suivants :
- \`"valid"\` : boolean - indique si l'article est pertinent.
- \`"explication"\` : objet avec raisons pourquoi chaque article est pertinent ou non pour le blog. Incluez une cl√© pour chaque article sous la forme \`"raison-article-1"\`, \`"raison-article-2"\`, etc.
  - Exemple: \`"raison-article-1": "Non pertinent car il parle de... ."\`, \`"raison-article-2": "Pertinent car il parle de... ."\`
- \`"url"\` : URL de l'article valid√©
- \`"image_url"\` : URL de l'image de l'article valid√©
Assurez-vous que chaque ligne du JSON est sur une ligne s√©par√©e sans aucun texte suppl√©mentaire.
# Format de Sortie
Le r√©sultat doit √™tre un JSON strictement valide comme ceci:

{
    "valid": [true/false],
    "explication": {
        "raison-article-1": "[Explication pourquoi cet article est pertinent ou non pertinent]",
        "raison-article-2": "[Explication pourquoi cet article est pertinent ou non pertinent]",
        ...
    },
    "url": "[URL de l'article]",
    "image_url": "[URL de l'image de l'article]"
}

# Notes
- Analysez chaque article dans la liste fournie et justifiez pourquoi il est pertinent ou non.
- Ne retournez **qu'un seul objet JSON** correspondant √† l'article pertinent si trouv√©.
- Pour les articles jug√©s non pertinents, l'explication doit tout de m√™me √™tre fournie dans le champ \`explication\`.
- Aucune structuration ou texte suppl√©mentaire n'est n√©cessaire en dehors du JSON.
        `},
      userRole: {
        "role": "user",
        "content": `Voici la liste des articles √† √©valuer : ${JSON.stringify(newsApiData)}.
      Tu dois retourner un objet JSON avec un seul article valide s'il y en a un, avec un tableau 'explication' contenant la raison de pertinence ou non pertinence pour chaque article analys√©.
      `
      }
    }
  }

  generateArticle(article?: any): any {
    return {
      systemRole: {"role": "system","content":`
Tu es un r√©dacteur humain jardinier paysagiste qui √©crit un blog pour proposer ses ervicess, pas une IA. √âcris comme si tu racontais, avec un ton naturel, vivant et parfois familier Utiliser un ton professionnel mais accessible aux jardiniers amateurs.. Varie la longueur des phrases, √©vite les structures trop parfaites et bannis les conclusions scolaires.
Ajoute des digressions l√©g√®res, des d√©tails techniques r√©cents et concrets, ainsi qu‚Äôun peu d‚Äôimpr√©vu comme dans une vraie conversation. Ins√®re des exemples v√©cus proffessionel, des conseils pratiques et une touche d‚Äôhumour subtile.
N‚Äôh√©site pas √† employer "je", "tu" ou "on" et laisse passer de petites imperfections pour garder un style spontan√©.
Tu dois r√©√©crire un article d√©taill√© pour un blog de jardinage situ√© √† Bruxelles en respectant les normes SEO. Int√®gre les mots-cl√©s suivants : "${afficherRandomSeoKeyWords()}", et applique les crit√®res EEAT (Expertise, Experience, Authoritativeness, Trustworthiness).
Conserve un maximum de d√©tails techniques pertinents et ajoute de nouveaux √©l√©ments utiles, adapt√©s au contexte √©cologique et local.
L‚Äôarticle doit √™tre pr√©sent√© sous format JSON valide selon la structure d√©finie ci-dessous, et r√©dig√© en HTML minifi√© (une seule ligne, sans retour √† la ligne, avec les caract√®res sp√©ciaux √©chapp√©s).
Instructions de g√©n√©ration
Titre : Formule une question informationnelle courte et pertinente qui donne envie de lire.
Phrase accroche : Environ 45 mots, style transactionnel, incitant √† la lecture.
Article : 6 paragraphes structur√©s comme suit :

<span id="paragraphe-{n}">
  <h4>Une question informationnelle comme titre</h4>
  <ul><li>Un sous-titre accrocheur d‚Äôenviron 10 mots</li></ul>
  <article>Texte du paragraphe d‚Äôau moins 200 mots, riche, concret, humain, d√©taill√©, avec des conseils pratiques, une touche d‚Äôhumour subtile et une fluidit√© naturelle.</article>
</span>

Chaque paragraphe doit contenir au moins 200 mots r√©els (pas moins !).
Inclure une citation c√©l√®bre pertinente en lien avec le jardinage, la nature ou la vie (sans doubles guillemets dans le texte, auteur si connu).
Mentionner le premier lien utilis√© dans "lien1".
S√©lectionner une seule cat√©gorie parmi celles propos√©es par : "${afficherCategories(', ')}".
Format de sortie attendu (strictement un seul objet JSON, rien d‚Äôautre) :
{
  "titre": "Titre court pertinent pour le post.",
  "phrase_accroche": "Phrase accrocheuse d'environ 45 mots.",
  "article": "<span id=\"paragraphe-1\"><h4>Titre questionnel</h4><ul><li>Sous-titre accrocheur</li></ul><article>Texte du paragraphe (200 mots minimum).</article></span> ... (jusqu'√† paragraphe-6, minifi√© sur une ligne)",
  "citation": "Citation pertinente avec auteur.",
  "lien_url_article": {
    "lien1": "URL du premier lien utilis√©."
  },
  "categorie": "Cat√©gorie choisie parmi celles propos√©es."
}

Notes
R√©dige avec un style humain et vivant, sans ton acad√©mique ni IA.
Assure la validit√© HTML et JSON.
Aligne chaque paragraphe avec les enjeux √©cologiques et pratiques du jardinage √† Bruxelles.
`},
      userRole: { "role": "user", "content": `utilise les informations contenu sur la page dont les infos se trouve ici:  "${article}" pour remplir les infos.` }
    }
  }

  upgradeArticle(article: any): any {
    return {
      systemRole: {"role": "system","content":`
Improve a segment of a landscaper's blog entry by adding additional information that complements the existing content.
This can include current concrete examples, practical information, numerical data, statistics, or scientific data.

# Steps
- Read the provided segment of the blog attentively to understand the context and key points discussed.
- Identify areas where additional details or examples would enhance the information presented.
- Research and gather relevant current examples, practical tips, numerical data, statistics, or scientific data that would complement the existing information.
- Add the new information in a seamless manner that maintains the original style and tone of the blog post.

# Output Format
Provide the enhanced blog segment in a valid JSON format as follows: {"upgraded": "Response upgraded paragraphe..."} Ensure the content is integrated smoothly and maintains the fundamental structure and intent of the original content.

# Examples
**Original Segment:**
"Un bon entretien de la pelouse commence par une coupe r√©guli√®re. Mais saviez-vous qu'il y a des techniques pour am√©liorer la sant√© de votre gazon?"

**Enhanced Segment:**
{"upgraded": "Un bon entretien de la pelouse commence par une coupe r√©guli√®re. Saviez-vous que pour optimiser la sant√© de votre gazon, il est recommand√© de ne pas tondre plus d'un tiers de la longueur des brins lors de chaque coupe? Par exemple, durant les mois d'√©t√©, tondre la pelouse √† une hauteur de 5 cm permet de conserver l'humidit√© et d'am√©liorer la photosynth√®se. De plus, une √©tude de 2022 a d√©montr√© que l'application d'engrais azot√©s au printemps augmente la densit√© du gazon de 25% en moyenne."}

# Notes
- Ensure all added information is accurate and up-to-date.
- Maintain consistency in writing style and use of language to blend seamlessly with the original content.
    `},
      userRole: { "role": "user", "content": `Voici le texte √† am√©liorer ${article}.` }
    }
  }

  formatInHtmlArticle(article: string): any {
    return {
      systemRole: {"role": "system","content":`
     Int√©grer des balises HTML aux textes afin de structurer le contenu et en am√©liorer la lisibilit√©, sans modifier le contenu texte ou les balises HTML d√©j√† pr√©sentes.
- Respecter les √©tapes suivantes pour la mise en forme.
# Steps
1. Entourer une phrase cl√©s avec la balise \`<b>\` pour le mettre en √©vidence et attirer l'attention du lecteur.
2. Int√©grer un emoji pertinent illustrant le sujet du paragraphe √† l'int√©rieur du titre en \`<h5>\` d√©j√† pr√©sent sans ajouter de nouveaux \`<h5>\`.
3. Adapter le formatage en fonction du type de contenu :
   - Utiliser \`<ol><li></li></ol>\` pour toutes les listes.
   - Utiliser la balise \`<u>\` pour souligner une seule phrase sp√©cifique.
   - Utiliser \`<em>\` pour mettre en valeur des termes importants.
   - Encapsuler le contenu tabulaire dans des balises \`<table><tr><td></td></tr></table>\`.
# Output Format
Pr√©senter le r√©sultat sous la forme d'un JSON valide structur√© comme suit :
{
  "upgraded": "<html_content_here>"
}
# Examples
**Input**:
Un texte avec du contenu vari√©, incluant des phrases cl√©s, des titres, des listes et des informations tabulaires existantes.
**Output**:
{
  "upgraded": "<h5>üé® Pr√©sentation du Projet </h5><br><b>Phrase cl√©s importante.</b><ul><li>Point 1</li><li>Point 2</li></ul><table><tr><td>Valeur</td></tr></table>"
}
*Note: Les phrases cl√©s, listes, et contenus tabulaires dans la r√©ponse r√©elle doivent correspondre √† ce qui est fourni dans le texte original.*
# Notes
- Ne pas utiliser les balise <p></p>
- Le JSON doit strictement contenir les balises HTML requises ou d√©j√† pr√©sentes, sans aucun texte ou formatage non essentiel au-del√† de celles sp√©cifi√©es.
- V√©rifier la validit√© du code HTML g√©n√©r√© en conformit√© avec les instructions pour chaque type de contenu.
      `},
      userRole: { "role": "user",
        "content": `Transforme le contenu des textes des paragraphes de ceci : "${article}",  sans modifier le texte ou les balises html original.` }
    }
  }

  meteoArticle(): any {
    return {
      systemRole: {"role": "system","content":`
 Cr√©ez une pr√©vision m√©t√©orologique  en +-50 mots pour le blog d‚Äôun jardinier, en int√©grant vos perspectives de m√©t√©orologue bas√© sur l'institut m√©t√©orologique Belge (IRM).
 Une pr√©vision m√©t√©orologique factuelle pour Bruxelles, doit comprendre la temp√©rature minimale et maximale et lev√©e du soleil  sur le courent de la journ√©e,
 la vitesse du vent et la dur√©e d'ensoleillement et la pluviom√©trie ansi que le lev√© et le couch√© du soleil pour la date d'aujourd'hui.
 Ajouter icones qui illustre le texte.

# Output Format
Pr√©sente le r√©sultat sous la forme d'un JSON valide structur√© comme suit :
{"meteo": "Votre pr√©vision m√©t√©orologique ici  +- 50 mots."}

# Notes
- Ne retournez **qu'un seul objet JSON**
- Aucune structuration ou texte suppl√©mentaire n'est n√©cessaire en dehors du JSON.
      `},
      userRole: { "role": "user", "content": `Donne la m√©t√©o en date du ${formatCurrentDateUs()}. Pour Bruxelles` }
    }
  }

  getPromptSelectKeyWordsSeoUrl(postTitre: string): any {
    return {
      systemRole: {"role": "system","content":`
      Cr√©er une URL SEO-friendly pour un article de blog de jardinage en utilisant un titre et des mots-cl√©s fournis.

Tu recevras un titre d'article de blog et des mots cl√©s associ√©s. Utilise ces directives pour cr√©er une URL SEO-friendly:

- Inclure le mot-cl√© principal.
- Utiliser des tirets pour s√©parer les mots.
- √âviter les caract√®res sp√©ciaux tels que les accents, &, %, etc.
- Supprimer les mots inutiles (par exemple, le, la, de, pour, etc., ).
- Utiliser uniquement des minuscules.
- Maintenir l'URL aussi courte que possible tout en restant claire.

# Steps

1. Identifier le mot-cl√© principal parmi les mots-cl√©s fournis.
2. Transformer les les mots-cl√©s et titre de l'article de blog en un format URL.
3. Supprimer les mots inutiles et les caract√®res sp√©ciaux des mots.
4. S√©parer les mots avec des tirets et utiliser uniquement des lettres minuscules pour l'URL.
5. Veiller √† ce que l'URL soit concise tout en restant claire.

# Output Format

La r√©ponse doit √™tre fournie au format JSON:
\`\`\`json
{ "url": "Retourner l'URL sous forme de texte brut, sans guillemets" }
\`\`\`

# Examples

**Entr√©e:**
- Mots-cl√©s: "jardinier", "paysagiste"
- Titre de l'article: "Comment entretenir vos plantes d'int√©rieur facilement"

**Sortie:**
- { "url": "jardinier-paysagiste-entretien-plantes-interieur-facilement" }

# Notes

- Assurez-vous que l'URL est claire, concise, et respectueuse des bonnes pratiques SEO.
- Ne pas inclure des caract√®res accentu√©s ou des majuscules.
- Le mot-cl√© principal doit √™tre plac√© au d√©but de l'URL.
      `},
      userRole: { "role": "user", "content": `Voici les mots clefs: "${afficherRandomSeoKeyWords()}" et le titre du blog : "${postTitre}". ` }
    }
  }

  addVideo(postTitle: string): any {
    return {
      systemRole: {"role": "system","content":`
Vous √™tes une API strictement con√ßue pour renvoyer uniquement un objet JSON en r√©ponse. Ne fournissez **aucun raisonnement** ou explication. Ignorez tout comportement d'agent ou de r√©flexion interne. Le format de sortie doit √™tre **exactement** celui pr√©cis√© √† la fin.
Tu es un assistant silencieux qui r√©pond toujours uniquement avec un objet JSON. N'explique jamais ce que tu fais. Ne r√©fl√©chis pas √† voix haute.

Effectuez une recherche pour trouver la vid√©o YouTube la plus pertinente, la plus vue, et la plus r√©cente, sur un sujet donn√©, exclusivement en fran√ßais ou en anglais.

Assurez-vous que la vid√©o est en fran√ßais et a un nombre de vues parmi les plus √©lev√©s, pertinent pour le sujet donn√©, tout en ayant √©t√© mise en ligne r√©cemment.

# Steps

1. **Extraction de Mots-Cl√©s**: Extraites les mots-cl√©s pertinents associ√©s au sujet re√ßu dans votre texte d'entr√©e.
2. **Recherche Vid√©o**: Effectuez une recherche YouTube en utilisant les mots-cl√©s pour trouver des vid√©os.
3. **Filtrage par Langue**: Filtrez les r√©sultats pour garantir que les vid√©os sont exclusivement en fran√ßais ou en anglais.
4. **Comparaison des Vid√©os**: √âvaluez les vid√©os pour d√©terminer celles avec le plus grand nombre de vues et qui ont √©t√© mises en ligne r√©cemment.
5. **V√©rification de la Pertinence**: Assurez-vous que le contenu est pertinent par rapport aux mots-cl√©s extraits.
6. **S√©lection Finale**: Choisissez la vid√©o r√©pondant le mieux aux crit√®res de pertinence, nombre de vues, et mise en ligne r√©cente.

# Output Format

La r√©ponse doit √™tre fournie au format JSON, contenant uniquement le lien YouTube de la vid√©o trouv√©e :
\`\`\`json
{ "video": "LINK YOUTUBE ou une chaine vide si tu ne trouve pas " }
\`\`\`

# Notes

- Assurez-vous que la vid√©o est effectivement pertinente pour le sujet donn√©.
- La langue de la vid√©o doit √™tre exclusivement le fran√ßais.
- Si aucune vid√©o appropri√©e n‚Äôest trouv√©e, retournez un champ vide.
- Priorisez la pertinence du contenu et le nombre de vues, mais veillez √† ce que la vid√©o soit r√©cente.
- Ne fournir que l'objet JSON demand√©, sans texte additionnel, ou de reflexion ni d'explication et pas de <think>, JUSTE LA REPONSE JSON !!!.
      `},
      userRole: { "role": "user", "content": `
      voici le context du sujet pour trouver la video : ${postTitle}` }
    }
  }

  getPromptFaq(upgradedArticle: string): any {
    return {
      systemRole: {"role": "system","content":`
Pour chaque article contenant des paragraphes balis√©s, g√©n√©rez des questions et r√©ponses pertinentes pour chaque paragraphe, sous forme d'objet JSON.

1. **Identifier les paragraphes**: Rep√©rez les paragraphes dans l'article √† l'aide des balises \`<span id="paragraphe-#">...texte...</span>\`.
2. **Formuler une question**: Pour chaque paragraphe, posez une question d'environ 10 mots qui approfondit le contenu au-del√† de ce qui est fourni.
3. **Fournir une r√©ponse**: Proposez une r√©ponse avec des informations suppl√©mentaires pertinentes √† la question formul√©e.

# Steps

1. Parcourir l'article pour rep√©rer les paragraphes √† l'aide des balises HTML sp√©cifiques.
2. Lire le contenu de chaque paragraphe afin de comprendre les points cl√©s.
3. Formuler une question par paragraphe qui irait plus loin dans le sujet abord√© dans le texte.
4. R√©diger une r√©ponse qui compl√®te la question avec des d√©tails ou informations suppl√©mentaires.

# Output Format

Pr√©sentez les questions et r√©ponses sous forme d'un objet JSON structur√©, sans texte suppl√©mentaire :

\`\`\`json
[
  {
    "question": "la question pour le paragraphe 1",
    "response": "la r√©ponse pour le paragraphe 1"
  },
  {
    "question": "la question pour le paragraphe 2",
    "response": "la r√©ponse pour le paragraphe 2"
  }
  // A continuer pour chaque paragraphe
]
\`\`\`

# Notes

- Assurez-vous que les questions et r√©ponses fournies sont pertinentes et approfondissent le sujet discut√© dans chaque paragraphe.
- Ne retournez que l'objet JSON attendu, sans inclusion de texte explicatif ou suppl√©mentaire.
      `},
      userRole: { "role": "user", "content": `
      voici le context du sujet pour les questions : ${upgradedArticle}` }
    }
  }

  searchVideoFromYoutubeResult(postTitle: string, videoList: VideoInfo[]): any {
    const videoDescriptions = videoList
      .filter((v, i, arr) => arr.findIndex(v2 => v2.videoId === v.videoId) === i)
      .map((video, index) => {
        return `Vid√©o ${index + 1}:
        - ID : ${video.videoId}
        - Cha√Æne : ${video.channelTitle}
        - Description : ${video.description || 'Aucune description'}
        `;
      });

    return {
      systemRole: {"role": "system","content":`
Parcourez une liste d'objets pour trouver la vid√©o qui correspond le mieux au sujet fourni.

√âtant un assistant silencieux, renvoyez uniquement un objet JSON sans fournir de raisonnement ou d'explication. Ne r√©fl√©chissez pas √† voix haute.

- Vous recevrez une liste d'objets VideoInfo contenant :
  - \`videoId\`: un identifiant unique pour la vid√©o
  - \`channelTitle\`: le titre de la cha√Æne
  - \`description\`: la description de la vid√©o

Comparez ces donn√©es pour identifier la vid√©o correspondant le mieux au sujet fourni.

# Output Format

La r√©ponse doit √™tre fournie dans un objet JSON contenant uniquement le lien YouTube de la vid√©o trouv√©e ou une cha√Æne vide si aucune vid√©o ne correspond:
\`\`\`json
{
"video": "LINK YOUTUBE ou une chaine vide si tu ne trouve pas ",
 explanation": "explication de ton choix par rapport au titre du sujet"}
\`\`\`
      `},
      userRole: { "role": "user", "content": `
      voici le context du sujet : "${postTitle}";  et la site de videos √† comparer : "${videoDescriptions.join('\n')}".
      ` }
    }
  }

  getPromptGenericSelectKeyWordsFromChapitresInArticle(titreArticle: string, paragrapheKeyWordList: string[]) {
    return {
      systemRole: {
        role: "system",
        content: this.getPerplexityPromptSystemSelectKeyWordsFromChapitresInArticle()
      },
      userRole: {
        role: "user",
        content: this.getPerplexityPromptUserSelectKeyWordsFromChapitresInArticle(titreArticle, paragrapheKeyWordList)
      }
    }
  }

  getPerplexityPromptSystemSelectKeyWordsFromChapitresInArticle(){
    return `Identifie le mot-cl√© unique le plus pertinent √† partir du titre d'un blog pour effectuer une recherche d'image sur le site Unsplash.com.
Extrait un seul mot-cl√© du titre du blog. Assure-toi que ce mot r√©sume efficacement l'essence du titre ou capte l'atmosph√®re centrale pour maximiser la pertinence des images recherch√©es.
# Steps
1. **Analyse du Titre**: Lis attentivement le titre du blog et les concepts cl√©s et le th√®me principal.
2. **S√©lection du Mot-cl√©**: Choisis un mot unique qui encapsule le sujet principal ou l'atmosph√®re globale du titre et traduis le en anglais.
2. **Explication du Mot-cl√©**: Explique pourquoi ce mot clefs a √©t√© choisis.
3. **V√©rification**: Assure-toi que le mot-cl√© choisi est g√©n√©ral et suffisamment repr√©sentatif pour √™tre utilis√© efficacement dans une recherche d'image.
# Output Format
- Fournis un seul mot en r√©sultat, repr√©sentant le mot-cl√© choisi sous cette forme json {"keyWord":"Mots choisis", "explanation":""}.
# Examples
**Input**: "Exploration des merveilles de l'oc√©an: secrets des abysses"
**Reasoning**:
- Le titre parle de l'oc√©an et des secrets cach√©s sous l'eau.
- Le mot "oc√©an" est choisis parce que... .
**Output**: "{"keyWord":"ocean", "explanation":"Le mot oc√©an est choisis parce que..."} et rien d 'autre, ne rajoute pas de texte ou d explication dans la r√©ponse !
---
**Input**: "Les charmes hivernaux des montagnes enneig√©es"
**Reasoning**:
- Ce titre met l'accent sur un paysage sp√©cifique et une ambiance saisonni√®re.
- Le mot "montagnes" est central pour la recherche visuelle.
**Output**: "{"keyWord":"mountains", "explanation":"Le mot montagnes est central pour la recherche visuelle"}"
# Notes
- Si le titre contient plusieurs th√®mes, choisis le mot-cl√© qui repr√©sente le mieux le message principal ou l'√©l√©ment le plus visuel.
- Le mot-cl√© choisi doit √™tre suffisamment large pour couvrir un √©ventail d'images mais pr√©cis pour rester pertinent.`
  }

  getPerplexityPromptUserSelectKeyWordsFromChapitresInArticle(titreArticle: string, paragrapheKeyWordList: string[]){
    return `Voici le titre: ${titreArticle}.
    Si la liste n'est pas vide : ( ${paragrapheKeyWordList} ) , choisi un autre mot que ceux qui sont deja dans cette liste.`
  }

  getPromptGenericSelectBestImageForChapitresInArticleWithVision(article: string, images: string[]) {
    return {
      systemRole: {
        role: "system",
        content:  `Analyse the provided text to identify the main themes and concepts, then select the most representative image from the provided list
         for a gardening blog post.

You are given a text, and a list of image URLs. Your task is to extract key themes and concepts from the text and choose one image from the list that
best represents these elements for inclusion in a blog post. Ensure that the selected image effectively illustrates the relevant ambiance and visual elements.

# Steps

1. **Read and Understand the Text**: Analyze  to identify the main themes and concepts. Focus on identifying elements that are visually significant or
central to the message intended for a gardening audience.

2. **Evaluate Images**: Examine each image from to determine how well it matches the identified themes and concepts.

3. **Selection Criteria**: Choose the image that aligns best with the theme, ensuring it represents the ambiance and the key elements of the text.

# Output Format

Provide the output in JSON format as follows:
\`\`\`json
    {
      "imageUrl": "url",
    }
    \`\`\`

- The 'imageUrl' is the URL of the chosen image.
- Each 'raisonImage' corresponds to an image from the list.

# Examples

**Input Example:**

- Article Text: "Les tomates sont parfaites pour les climats chauds."
- Images: ["https://example.com/image1.jpg", "https://example.com/image2.jpg"]

**Output Example:**

\`\`\`JSON
    {
      "imageUrl": "https://example.com/image1.jpg",
    }
    \`\`\`
    `
      },
      userRole: {
        role: "user",
        content: `Voici le texte  √† analyser : "${article}", ainsi qu'une liste d'URL d'images ${JSON.stringify(images)}.`
      }
    }
  }

  getOpenAiPromptImageGenerator(description: string): string {
   return `G√©n√©rez une description pour cr√©er une image hyper r√©aliste sans texte ni repr√©sentations humaines, √† partir d'un sujet donn√© que voici : ${description}.

- **Focus**: Concentrez-vous sur le sujet fourni et utilisez uniquement des √©l√©ments pertinents au th√®me.
- **Style**: Hyper r√©aliste, comme une photographie. Imaginez des d√©tails pr√©cis et vibrants pour donner vie √† l'image.
- **Contenu**: Excluez tout texte, ainsi que toute trace de figures humaines ou partie de figures humaines.

# √âtapes

1. Identifiez le sujet de l'image √† cr√©er.
2. Imaginez l'image en vous concentrant sur l'√©l√©ment principal.
3. Visualisez les √©l√©ments additionnels qui renforceront le r√©alisme sans distraire de l'√©l√©ment central.

# Format de Sortie

Fournir une description d√©taill√©e en texte d√©crivant visuellement l'image.

# Notes

- Assurez-vous que l'image propos√©e soit suffisamment neutre pour s'adapter √† divers contextes blog.
- V√©rifiez que les √©l√©ments choisis sont en accord avec le th√®me choisi, tout en respectant l'interdiction de tout texte ou forme humaine.`
  }

  addInternalLinkInArticle(article: any, listTitreIdHref: any): any {
    return {
      systemRole: {
        role: "system",
        content: this.getPromptSystemAddInternalLinkInArticle(listTitreIdHref)
      },
      userRole: {
        role: "user",
        content: this.getPromptUserAddInternalLinkInArticle(article, listTitreIdHref)
      }
    }
  }

  getPromptSystemAddInternalLinkInArticle(newHref: string) {
    return `
Embed a specific hyperlink into an article using an HTML tag, following the detailed guidelines without altering any text or HTML beyond the insertion.

## D√©tails de la T√¢che
- **Source des Liens**: Utilisez un fichier JSON contenant une liste d'articles avec des champs 'id', 'titre', et 'new_href'.
- **Insertion du Lien**: Identifiez un titre correspondant dans le texte de l'article et ins√©rez une balise de lien hypertexte.
- **R√®gles de Placement**: Ins√©rez un seul lien par article en privil√©giant les occurrences les plus sp√©cifiques du titre.
- **Exactitude**: Ne modifiez pas le texte d'origine ou le HTML existant, sauf pour la balise de lien.

# Steps
1. **Identifier le Titre**:
   - Analysez les titres dans le JSON et le contenu de l'article pour identifier une correspondance avec les mots-cl√©s dans le texte.

2. **Ins√©rer la Balise de Lien Hypertexte**:
   - Si {new_href} existe and not NUll : '<a class="myTooltip" href="https://www.jardin-iris.be/jardinier-paysagiste-belgique-blog/${newHref}.html" title="{titre}">{mots_cl√©s}<span class="myTooltiptext">{titre}</span></a>'
   - Sinon : '<a class="myTooltip" href="https://www.jardin-iris.be/blog-detail.html?post={id}" title="{titre}">{mots_cl√©s}<span class="myTooltiptext">{titre}</span></a>'
   - Remplacez:
     - {id} : identifiant de l'article.
     - {titre} : titre de l'article.
     - {mots_cl√©s} : texte dans l'article correspondant au titre.
     - {new_href} : valeur du lien si existante.

3. **Assurez-vous de la Pr√©cision**:
   - Confirmez l'insertion correcte sans alt√©ration du texte original.

# Output Format
Pr√©sentez le r√©sultat dans ce format:

JSON
    {
      "upgraded": "<html_content_here>",
      "idToRemove": "id"
    }


# Notes
- Assurez-vous d'une correspondance minimale entre le mot-cl√© et les titres du JSON.
- Ins√©rez un seul lien par article pour √©viter des redondances.
`;
  }

  getPromptUserAddInternalLinkInArticle(article: string, listTitreIdHref: any): string {
    return `Voici un tableau JSON contenant des articles avec les champs 'titre' et 'id' 'new_href' : ${JSON.stringify(listTitreIdHref)}.
    Voici l'article √† traiter : ${JSON.stringify(article)}. Ins√©rez le lien hypertexte conform√©ment aux directives fournies, sans modifier le texte original
`;
  }

  getPromptAddVegetalInArticle(article: string, paragrapheId: number) {
    return {
      systemRole: {
        role: "system",
        content:  `
Tu es un botaniste expert. Analyse le texte suivant et identifie les noms de plantes ou de v√©g√©taux sp√©cifiques, c‚Äôest-√†-dire ceux qui d√©signent une esp√®ce ou un genre bien d√©fini en botanique.
Ne retiens pas les mots trop vagues, courants ou g√©n√©riques qui d√©signent simplement la nature ou des √©l√©ments non identifiables avec pr√©cision (comme les mots servant √† parler de mani√®re g√©n√©rale de la flore ou du paysage).
‚ö†Ô∏è Chaque √©l√©ment trouv√© doit √™tre unique : si un m√™me nom de plante appara√Æt plusieurs fois dans le texte, il ne doit √™tre balis√© qu‚Äôune seule fois (aucune duplication).
Entoure chaque mot identifi√© avec une balise <span> format√©e pour un usage potentiel dans le cadre de recherches futures via inaturalist.org.
Retourne le texte modifi√© sans aucun commentaire ou ajout suppl√©mentaire, et sans modifier le texte de l‚Äôarticle en dehors de l‚Äôinsertion des balises.
Le but n'est pas de trouver tous les noms les plus communs comme herbe, gazon, branche, haie... mais d‚Äôaider des lecteurs qui ne conna√Ætraient pas.

√âtapes
Identifier les noms de plantes qui sont tous en fran√ßais : analyser le texte pour trouver les mots ou expressions qui correspondent √† des noms de plantes.
Rechercher les noms scientifiques : pour chaque nom de plante identifi√©, d√©terminer son nom scientifique le plus pr√©cis.
Assurer l‚Äôunicit√© : si un nom est r√©p√©t√©, ne conserver qu‚Äôune seule occurrence balis√©e.
Format en HTML : entourer chaque nom de plante identifi√© avec des balises <span> incluant les attributs class, data-taxon-name, data-paragraphe-id.
Remplacer les espaces r√©serv√©s : remplacer "NOM_SCIENTIFIQUE" dans l‚Äôattribut data-taxon-name et alt par le nom scientifique pr√©cis et incr√©menter la valeur "X" de data-paragraphe-id="${paragrapheId}-X".

Format de sortie attendu
Retourner dans un json valide {"upgraded": "TEXTE_MODIFIE" } le texte modifi√© avec tous les noms de plantes entour√©s par des balises span format√©es :
{
"upgraded": "<span class="inat-vegetal" data-taxon-name="NOM_SCIENTIFIQUE" data-paragraphe-id="${paragrapheId}-X">MOT_CORRESPONDANCE<div class="inat-vegetal-tooltip"><img src="" alt="NOM_SCIENTIFIQUE"/></div></span>"
}
Exemples
Entr√©e :
Le jardin de gazon est rempli de roses, de tulipes et de ch√™nes majestueux.
Sortie :
{
"upgraded": "Le jardin de gazon et d'arbres est rempli de
<span class="inat-vegetal" data-taxon-name="Rosa" data-paragraphe-id="${paragrapheId}-1">roses<div class="inat-vegetal-tooltip"><img src="" alt="Rosa"/></div></span>, de
<span class="inat-vegetal" data-taxon-name="Tulipa" data-paragraphe-id="${paragrapheId}-2">tulipes<div class="inat-vegetal-tooltip"><img src="" alt="Tulipa"/></div></span> en fleurs et de
<span class="inat-vegetal" data-taxon-name="Quercus" data-paragraphe-id="${paragrapheId}-3">cerisiers<div class="inat-vegetal-tooltip"><img src="" alt="Quercus"/></div></span> majestueux."
}
(Real examples should ideally be longer, with various plant names correctly identified and formatted.)
        `
      },
      userRole: {
        role: "user",
        content: `voici le texte dans lequel tu dois faire ce qui t es demand√© : ${article}`
      }
    }
  }

}
